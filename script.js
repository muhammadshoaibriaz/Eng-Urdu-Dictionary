const fs = require('fs');

// Array of words starting with "A"
const words = [
  'abandon',
  'ability',
  'absence',
  'absolute',
  'abstract',
  'academy',
  'accent',
  'acceptance',
  'access',
  'accident',
  'account',
  'accuracy',
  'achievement',
  'acid',
  'acoustic',
  'acquaintance',
  'action',
  'actor',
  'addition',
  'address',
  'adjustment',
  'administration',
  'adventure',
  'advice',
  'affection',
  'agency',
  'aggression',
  'agreement',
  'airplane',
  'alcohol',
  'alert',
  'alien',
  'alley',
  'alliance',
  'almanac',
  'alphabet',
  'altitude',
  'amateur',
  'ambition',
  'amendment',
  'amount',
  'amusement',
  'analogy',
  'analysis',
  'anatomy',
  'ancestor',
  'anchor',
  'angel',
  'anger',
  'angle',
  'animal',
  'animation',
  'anniversary',
  'announcement',
  'answer',
  'antenna',
  'anticipation',
  'anxiety',
  'apology',
  'apparatus',
  'appearance',
  'appetite',
  'applause',
  'application',
  'appointment',
  'appreciation',
  'approach',
  'approval',
  'archaeology',
  'architect',
  'archive',
  'area',
  'argument',
  'arithmetic',
  'armament',
  'aroma',
  'arrangement',
  'arrival',
  'arrogance',
  'art',
  'article',
  'artifact',
  'artist',
  'aspect',
  'assembly',
  'assertion',
  'assessment',
  'assignment',
  'association',
  'assumption',
  'atmosphere',
  'attachment',
  'attempt',
  'attention',
  'attitude',
  'attraction',
  'audience',
  'authority',
  'autonomy',
  'availability',
  'award',
  'awareness',
];

// Function to generate a single JSON object
const generateObject = word => {
  return {
    word,
    partOfSpeech: 'noun', // Adjust as needed
    pronunciation: `/Ëˆ${word}/`,
    audio: `https://example.com/audio/${word}.mp3`,
    definitions: [`Definition of ${word} 1`, `Definition of ${word} 2`],
    urduMeaning: `  ${word}`,
    synonyms: ['synonym1', 'synonym2', 'synonym3'],
    antonyms: ['antonym1', 'antonym2'],
    examples: [
      `Example sentence using ${word}`,
      `Another example with ${word}`,
    ],
    relatedWords: ['related1', 'related2'],
    usageNotes: `Usage notes for ${word}`,
    frequency: Math.random() * 10, // Random frequency
    etymology: `Etymology of ${word}`,
    origin: {
      language: 'Latin',
      root: `root of ${word}`,
      meaning: `meaning of ${word}`,
    },
    derivedForms: [
      {
        form: `${word}ly`,
        partOfSpeech: 'adverb',
        definition: `Adverb form of ${word}`,
      },
      {
        form: `${word}ness`,
        partOfSpeech: 'noun',
        definition: `Noun form of ${word}`,
      },
    ],
    categories: ['category1', 'category2'],
    popularityIndex: Math.random() * 10,
    tags: ['tag1', 'tag2'],
  };
};

// Generate 500 objects
const data = [];
for (let i = 0; i < 500; i++) {
  const word = words[i % words.length] + i; // Ensure unique words
  data.push(generateObject(word));
}

// Save to JSON file
fs.writeFileSync('words.json', JSON.stringify(data, null, 2), 'utf-8');

console.log("Generated JSON data saved to 'words.json'.");
